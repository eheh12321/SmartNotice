plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'sejong'
version = '1.0.2-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// MQTT Integration
	implementation("org.springframework.boot:spring-boot-starter-integration")
	implementation("org.springframework.integration:spring-integration-mqtt")

	// TTS API
	implementation platform('com.google.cloud:libraries-bom:25.1.0')
	implementation 'com.google.cloud:google-cloud-texttospeech'

	implementation platform('com.google.cloud:libraries-bom:25.2.0')
	implementation 'com.google.cloud:google-cloud-storage'

	// Twilio API
	implementation("com.twilio.sdk:twilio:8.0.+")

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// faker
	implementation 'com.github.javafaker:javafaker:1.0.2'

	// DevTools
	developmentOnly "org.springframework.boot:spring-boot-devtools"

	// JSON Parser
	implementation 'org.json:json:20220320'

	// Swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	// Bean Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
	useJUnitPlatform()
}

// plain.jar 생성 금지
jar {
	enabled = false
}